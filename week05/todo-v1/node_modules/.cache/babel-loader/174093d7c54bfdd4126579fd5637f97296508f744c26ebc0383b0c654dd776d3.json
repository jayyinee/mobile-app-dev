{"ast":null,"code":"var _jsxFileName = \"C:\\\\jayine\\\\work_school\\\\school\\\\fall_2024\\\\mobile_app_dev\\\\week05\\\\todo-v1\\\\src\\\\components\\\\TodoCreate.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoCreate = props => {\n  _s();\n  // 2) pass in onCreate prop\n  const {\n    onCreate\n  } = props;\n  // 3) create state for input\n  const [title, setTitle] = useState('');\n  // 4) add event handler for onChange\n  const handleChange = event => {\n    setTitle(event.target.value);\n  };\n  // 7) add onSubmit handler and pass in onCreate prop\n  // don't forget we need to interrupt default form submission behavior!\n  const handleSubmit = event => {\n    event.preventDefault();\n    onCreate(title);\n    // 9) we want to clear out the form after its submitted\n    // use our state setter\n    setTitle('');\n  };\n\n  // 1) needs a label, input, and submit button!\n  // we need to bind our input element which means this\n  // component also needs state!\n  return (\n    /*#__PURE__*/\n    // 8) pass handleSubmit to form\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleChange,\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(TodoCreate, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = TodoCreate;\nexport default TodoCreate;\nvar _c;\n$RefreshReg$(_c, \"TodoCreate\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TodoCreate","props","_s","onCreate","title","setTitle","handleChange","event","target","value","handleSubmit","preventDefault","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/jayine/work_school/school/fall_2024/mobile_app_dev/week05/todo-v1/src/components/TodoCreate.js"],"sourcesContent":["import {useState} from 'react'\r\n\r\nconst TodoCreate = (props) => {\r\n  // 2) pass in onCreate prop\r\n  const {onCreate} = props\r\n  // 3) create state for input\r\n  const [title, setTitle] = useState('')\r\n  // 4) add event handler for onChange\r\n  const handleChange = (event) => {\r\n    setTitle(event.target.value)\r\n  }\r\n  // 7) add onSubmit handler and pass in onCreate prop\r\n  // don't forget we need to interrupt default form submission behavior!\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    onCreate(title)\r\n    // 9) we want to clear out the form after its submitted\r\n    // use our state setter\r\n    setTitle('')\r\n  }\r\n\r\n  // 1) needs a label, input, and submit button!\r\n  // we need to bind our input element which means this\r\n  // component also needs state!\r\n  return (\r\n    // 8) pass handleSubmit to form\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Title:</label>\r\n      {/* 5) wire it up to state and handler */}\r\n      <input type=\"text\" onChange={handleChange} value={title} />\r\n      {/* 6) clicking button or hitting enter key will trigger form submit */}\r\n      <button>Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoCreate\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B;EACA,MAAM;IAACC;EAAQ,CAAC,GAAGF,KAAK;EACxB;EACA,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC9BF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EACD;EACA;EACA,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtBR,QAAQ,CAACC,KAAK,CAAC;IACf;IACA;IACAC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACA;EACA;EACA;IAAA;IACE;IACAN,OAAA;MAAMa,QAAQ,EAAEF,YAAa;MAAAG,QAAA,gBAC3Bd,OAAA;QAAAc,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAErBlB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEb,YAAa;QAACG,KAAK,EAAEL;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3DlB,OAAA;QAAAc,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB;EAAC;AAEX,CAAC;AAAAf,EAAA,CAhCKF,UAAU;AAAAoB,EAAA,GAAVpB,UAAU;AAkChB,eAAeA,UAAU;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}