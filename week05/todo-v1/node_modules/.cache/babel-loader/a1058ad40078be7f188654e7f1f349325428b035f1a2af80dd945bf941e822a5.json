{"ast":null,"code":"var _jsxFileName = \"C:\\\\jayine\\\\work_school\\\\school\\\\fall_2024\\\\mobile_app_dev\\\\week05\\\\todo-v1\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\n/* first just show them\r\nconst TodoItem = (props) => {\r\n  const {todo} = props\r\n  return <div>{todo.title}</div>\r\n}\r\n*/\n\n// delete the item, need an X, and to define deleteTodoById in APP!\n/*const TodoItem = (props) => {\r\n  const {todo, onDelete} = props\r\n\r\n  // we cannot call the function directly onClick, we need the ID,\r\n  // So we need to wrap it in a handleCLick functions\r\n  const handleClick = () => {\r\n    onDelete(todo.id)\r\n  }\r\n  return (\r\n    <div>\r\n      {todo.title} <button onClick={handleClick}>X</button>\r\n    </div>\r\n  )\r\n}*/\n\n// EDIT: Now this component needs to show either the TITLE or the EDIT FORM\n// content changing = STATE here too!\nimport { useState } from 'react';\nimport TodoEdit from './TodoEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = props => {\n  _s();\n  const {\n    todo,\n    onDelete,\n    onEdit\n  } = props;\n  const [showEdit, setShowEdit] = useState(false);\n\n  // NEW we need two different click handlers so we will change this to handleDelete\n  const handleDelete = () => {\n    onDelete(todo.id);\n  };\n\n  // NEW edit handler, THIS JUST HIDES AND SHOWS\n  const handleEdit = () => {\n    setShowEdit(!showEdit);\n  };\n\n  // LAST: combine edit and close forms into one submit prop/handler\n  // remove ONEDIT\n  const handleSubmit = (id, newTitle) => {\n    // CHANGE TO ONEDIT PROP NOT HANDLEEDIT ANYMIRE\n    onEdit(id, newTitle);\n    setShowEdit(false);\n  };\n  // NEW Conditional content\n  let content = /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: todo.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }, this);\n  /* FIRST PASS WITH ONEDIT\r\n  if (showEdit) {\r\n    // would be nice to have the existing todo pre-populate the form right?\r\n    // lets make TodoEdit component do that!\r\n    content = <TodoEdit todo={todo} onEdit={onEdit} />\r\n  }\r\n    */\n  // LAST\n  if (showEdit) {\n    content = /*#__PURE__*/_jsxDEV(TodoEdit, {\n      todo: todo,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [content, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"Uj43O+4yi/prCM6RKMHB9c/bFLk=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["useState","TodoEdit","jsxDEV","_jsxDEV","TodoItem","props","_s","todo","onDelete","onEdit","showEdit","setShowEdit","handleDelete","id","handleEdit","handleSubmit","newTitle","content","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/jayine/work_school/school/fall_2024/mobile_app_dev/week05/todo-v1/src/components/TodoItem.js"],"sourcesContent":["/* first just show them\r\nconst TodoItem = (props) => {\r\n  const {todo} = props\r\n  return <div>{todo.title}</div>\r\n}\r\n*/\r\n\r\n// delete the item, need an X, and to define deleteTodoById in APP!\r\n/*const TodoItem = (props) => {\r\n  const {todo, onDelete} = props\r\n\r\n  // we cannot call the function directly onClick, we need the ID,\r\n  // So we need to wrap it in a handleCLick functions\r\n  const handleClick = () => {\r\n    onDelete(todo.id)\r\n  }\r\n  return (\r\n    <div>\r\n      {todo.title} <button onClick={handleClick}>X</button>\r\n    </div>\r\n  )\r\n}*/\r\n\r\n// EDIT: Now this component needs to show either the TITLE or the EDIT FORM\r\n// content changing = STATE here too!\r\nimport {useState} from 'react'\r\nimport TodoEdit from './TodoEdit'\r\nconst TodoItem = (props) => {\r\n  const {todo, onDelete, onEdit} = props\r\n  const [showEdit, setShowEdit] = useState(false)\r\n\r\n  // NEW we need two different click handlers so we will change this to handleDelete\r\n  const handleDelete = () => {\r\n    onDelete(todo.id)\r\n  }\r\n\r\n  // NEW edit handler, THIS JUST HIDES AND SHOWS\r\n  const handleEdit = () => {\r\n    setShowEdit(!showEdit)\r\n  }\r\n\r\n  // LAST: combine edit and close forms into one submit prop/handler\r\n  // remove ONEDIT\r\n  const handleSubmit = (id, newTitle) => {\r\n    // CHANGE TO ONEDIT PROP NOT HANDLEEDIT ANYMIRE\r\n    onEdit(id, newTitle)\r\n    setShowEdit(false)\r\n  }\r\n  // NEW Conditional content\r\n  let content = <h3>{todo.title}</h3>\r\n  /* FIRST PASS WITH ONEDIT\r\n  if (showEdit) {\r\n    // would be nice to have the existing todo pre-populate the form right?\r\n    // lets make TodoEdit component do that!\r\n    content = <TodoEdit todo={todo} onEdit={onEdit} />\r\n  }\r\n    */\r\n  // LAST\r\n  if (showEdit) {\r\n    content = <TodoEdit todo={todo} onSubmit={handleSubmit} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* NEW CONDITIONAL RENDER */}\r\n      {content}\r\n      <button onClick={handleEdit}>Edit</button>\r\n      <button onClick={handleDelete}>Delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoItem\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,QAAQ,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM;IAACC,IAAI;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGJ,KAAK;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBJ,QAAQ,CAACD,IAAI,CAACM,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBH,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;;EAED;EACA;EACA,MAAMK,YAAY,GAAGA,CAACF,EAAE,EAAEG,QAAQ,KAAK;IACrC;IACAP,MAAM,CAACI,EAAE,EAAEG,QAAQ,CAAC;IACpBL,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EACD;EACA,IAAIM,OAAO,gBAAGd,OAAA;IAAAe,QAAA,EAAKX,IAAI,CAACY;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnC;AACF;AACA;AACA;AACA;AACA;AACA;EACE;EACA,IAAIb,QAAQ,EAAE;IACZO,OAAO,gBAAGd,OAAA,CAACF,QAAQ;MAACM,IAAI,EAAEA,IAAK;MAACiB,QAAQ,EAAET;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5D;EAEA,oBACEpB,OAAA;IAAAe,QAAA,GAEGD,OAAO,eACRd,OAAA;MAAQsB,OAAO,EAAEX,UAAW;MAAAI,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1CpB,OAAA;MAAQsB,OAAO,EAAEb,YAAa;MAAAM,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAjB,EAAA,CA3CKF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}